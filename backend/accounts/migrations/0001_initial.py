# Generated by Django 4.2.7 on 2025-09-16 21:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("client", "Cliente"),
                            ("cultor", "Cultor"),
                            ("manager", "Gestor"),
                            ("transport", "Transportista"),
                            ("event_creator", "Creador de Eventos"),
                        ],
                        default="client",
                        max_length=20,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                regex="^\\+?1?\\d{9,15}$"
                            )
                        ],
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(blank=True, null=True, upload_to="profiles/"),
                ),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True, max_length=500)),
                ("location", models.CharField(blank=True, max_length=100)),
                ("website", models.URLField(blank=True)),
                ("social_facebook", models.URLField(blank=True)),
                ("social_instagram", models.URLField(blank=True)),
                ("social_youtube", models.URLField(blank=True)),
                ("language", models.CharField(default="es", max_length=10)),
                (
                    "timezone",
                    models.CharField(default="America/Santiago", max_length=50),
                ),
                ("notifications_email", models.BooleanField(default=True)),
                ("notifications_sms", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TransportProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(blank=True, max_length=100)),
                ("license_number", models.CharField(max_length=50)),
                (
                    "vehicle_type",
                    models.CharField(
                        choices=[
                            ("car", "Auto"),
                            ("van", "Furgón"),
                            ("bus", "Bus"),
                            ("minibus", "Minibús"),
                        ],
                        max_length=20,
                    ),
                ),
                ("vehicle_capacity", models.PositiveIntegerField()),
                ("vehicle_plate", models.CharField(max_length=10)),
                ("vehicle_model", models.CharField(max_length=50)),
                ("vehicle_year", models.PositiveIntegerField()),
                ("license_expiry", models.DateField()),
                ("insurance_expiry", models.DateField()),
                ("technical_review_expiry", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                ("service_areas", models.JSONField(blank=True, default=list)),
                (
                    "rate_per_km",
                    models.DecimalField(decimal_places=2, default=0, max_digits=6),
                ),
                (
                    "rate_per_passenger",
                    models.DecimalField(decimal_places=2, default=0, max_digits=6),
                ),
                ("total_trips", models.PositiveIntegerField(default=0)),
                (
                    "total_earnings",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=3),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transport_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CultorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("music", "Música"),
                            ("visual_arts", "Artes Visuales"),
                            ("theater", "Teatro"),
                            ("dance", "Danza"),
                            ("crafts", "Artesanías"),
                            ("literature", "Literatura"),
                            ("photography", "Fotografía"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                ("specialties", models.JSONField(blank=True, default=list)),
                ("experience_years", models.PositiveIntegerField(default=0)),
                (
                    "hourly_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                ("portfolio_images", models.JSONField(blank=True, default=list)),
                ("portfolio_videos", models.JSONField(blank=True, default=list)),
                ("achievements", models.TextField(blank=True)),
                ("is_available", models.BooleanField(default=True)),
                ("max_group_size", models.PositiveIntegerField(default=10)),
                ("minimum_session_duration", models.PositiveIntegerField(default=60)),
                ("accepts_home_visits", models.BooleanField(default=True)),
                ("work_radius", models.PositiveIntegerField(default=10)),
                ("work_locations", models.JSONField(blank=True, default=list)),
                ("total_sessions", models.PositiveIntegerField(default=0)),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=3),
                ),
                (
                    "total_earnings",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cultor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
