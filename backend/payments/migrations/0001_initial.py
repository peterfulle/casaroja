# Generated by Django 4.2.7 on 2025-09-16 21:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Commission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gross_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "platform_percentage",
                    models.DecimalField(decimal_places=2, default=15.0, max_digits=5),
                ),
                (
                    "platform_commission",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "cultor_earning",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "transport_commission",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("is_paid_to_cultor", models.BooleanField(default=False)),
                ("paid_to_cultor_at", models.DateTimeField(blank=True, null=True)),
                ("payout_reference", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50, unique=True)),
                (
                    "invoice_type",
                    models.CharField(
                        choices=[
                            ("boleta", "Boleta"),
                            ("factura", "Factura"),
                            ("factura_exenta", "Factura Exenta"),
                        ],
                        max_length=20,
                    ),
                ),
                ("customer_name", models.CharField(max_length=200)),
                ("customer_rut", models.CharField(blank=True, max_length=12)),
                ("customer_address", models.TextField(blank=True)),
                ("customer_email", models.EmailField(max_length=254)),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "tax_rate",
                    models.DecimalField(decimal_places=2, default=19.0, max_digits=5),
                ),
                ("tax_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("items", models.JSONField(default=list)),
                ("dte_xml", models.TextField(blank=True)),
                (
                    "dte_pdf",
                    models.FileField(blank=True, null=True, upload_to="invoices/pdf/"),
                ),
                ("folio", models.CharField(blank=True, max_length=20)),
                ("is_sent", models.BooleanField(default=False)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("external_id", models.CharField(blank=True, max_length=200)),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "fee_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="CLP", max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("processing", "Procesando"),
                            ("completed", "Completado"),
                            ("failed", "Fallido"),
                            ("cancelled", "Cancelado"),
                            ("refunded", "Reembolsado"),
                            ("partially_refunded", "Parcialmente Reembolsado"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("failed_at", models.DateTimeField(blank=True, null=True)),
                ("gateway_response", models.JSONField(blank=True, default=dict)),
                ("failure_reason", models.TextField(blank=True)),
                ("description", models.CharField(blank=True, max_length=500)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("credit_card", "Tarjeta de Crédito"),
                            ("debit_card", "Tarjeta de Débito"),
                            ("bank_transfer", "Transferencia Bancaria"),
                            ("cash", "Efectivo"),
                            ("webpay", "Webpay"),
                            ("paypal", "PayPal"),
                            ("mercadopago", "MercadoPago"),
                            ("khipu", "Khipu"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("api_key", models.CharField(blank=True, max_length=200)),
                ("secret_key", models.CharField(blank=True, max_length=200)),
                ("webhook_url", models.URLField(blank=True)),
                (
                    "fixed_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                (
                    "percentage_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "minimum_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                (
                    "maximum_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("requires_verification", models.BooleanField(default=False)),
                ("supports_refunds", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Payout",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payout_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "payout_method",
                    models.CharField(
                        choices=[
                            ("bank_transfer", "Transferencia Bancaria"),
                            ("paypal", "PayPal"),
                            ("check", "Cheque"),
                            ("cash", "Efectivo"),
                        ],
                        max_length=20,
                    ),
                ),
                ("bank_name", models.CharField(blank=True, max_length=100)),
                ("account_number", models.CharField(blank=True, max_length=50)),
                ("account_holder_name", models.CharField(blank=True, max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("processing", "Procesando"),
                            ("completed", "Completado"),
                            ("failed", "Fallido"),
                            ("cancelled", "Cancelado"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("external_reference", models.CharField(blank=True, max_length=200)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "commissions",
                    models.ManyToManyField(
                        related_name="payouts", to="payments.commission"
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_payouts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payouts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentRefund",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "refund_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("external_id", models.CharField(blank=True, max_length=200)),
                ("refund_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("reason", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("processing", "Procesando"),
                            ("completed", "Completado"),
                            ("failed", "Fallido"),
                            ("cancelled", "Cancelado"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("gateway_response", models.JSONField(blank=True, default=dict)),
                ("failure_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refunds",
                        to="payments.payment",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processed_refunds",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="payment",
            name="payment_method",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="payments.paymentmethod"
            ),
        ),
    ]
